# SPDX-FileCopyrightText: NVIDIA CORPORATION & AFFILIATES
# Copyright (c) 2024-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[project]
name = "cloudai"
dynamic = ["version"]
dependencies = [
  "bokeh==3.4.1",
  "pandas==2.2.1",
  "tbparse==0.0.8",
  "toml==0.10.2",
  "kubernetes==30.1.0",
  "pydantic==2.8.2",
  "jinja2==3.1.6",
  "websockets==15.0.1",
]
requires-python = ">=3.10"
scripts = { cloudai = "cloudai.__main__:main" }

  [project.optional-dependencies]
  dev = [
    "ruff==0.11.7",
    "pandas-stubs==2.2.*",
    "pyright==1.1.400",
    "build==1.2.*",
    "vulture==2.14",
    "pytest==8.3.*",
    "pytest-cov==6.1.*",
    "pytest-asyncio==0.26.*",
    "import-linter==2.3.*",
    "pytest-deadfixtures==2.2.*",
    "taplo==0.9.3",
  ]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.version]
source = "scm"
fallback_version = "1.3.0+unknown"

[tool.ruff]
line-length = 120

  [tool.ruff.format]
  indent-style = "space"

  [tool.ruff.lint]
  select = ["I", "B", "E", "D", "F", "SIM", "W", "C90", "EXE", "ERA", "RUF"]
  ignore = [
    "D407", # Missing dashed underline after section
    "D203", # conflicts with D211
    "D212", # conflicts with D213
    "D413", # Missing blank line after last section

    # TODO: Remove these once we have docstrings
    "D100", # Missing docstring in public module
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in `__init__`
  ]

    [tool.ruff.lint.per-file-ignores]
    "**/tests/*" = ["D"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src", "."]
addopts = "--strict-markers -m 'not ci_only'"
empty_parameter_set_mark = "fail_at_collect"
markers = ["ci_only: mark test as CI-only"]
filterwarnings = ["error"]

[tool.importlinter]
root_package = "cloudai"

  [[tool.importlinter.contracts]]
  name = "_core is not accessed directly"
  type = "forbidden"
  forbidden_modules = ["cloudai._core"]
  allow_indirect_imports = true # this is to allow "from cloudai import ..."
  source_modules = [
    "cloudai.installer",
    "cloudai.parser",
    "cloudai.report_generator",
    "cloudai.report_generator.tool",
    "cloudai.runner",
    "cloudai.util",
    "cloudai.cli",
  ]

[tool.vulture]
ignore_names = ["mock_datetime_now"]
min_confidence = 100

[tool.coverage.report]
exclude_also = ["@abstractmethod"]

[tool.pyright]
include = ["src", "tests"]
exclude = ["src/cloudai/workloads/nemo_run/cloudai_nemorun.py"]
