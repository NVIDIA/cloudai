# SPDX-FileCopyrightText: NVIDIA CORPORATION & AFFILIATES
# Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[project]
name = "cloudai"
dynamic = ["version"]
dependencies = [
  "bokeh==3.4.1",
  "pandas==2.2.1",
  "tbparse==0.0.8",
  "toml==0.10.2",
  "kubernetes==30.1.0",
  "pydantic==2.8.2",
]
  [project.scripts]
  cloudai = "cloudai.__main__:main"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.version]
source = "scm"

[tool.ruff]
target-version = "py39"
line-length = 120

  [tool.ruff.format]
  indent-style = "space"

  [tool.ruff.lint]
  select = ["I", "B", "E", "D", "F", "SIM", "W", "C90", "EXE", "ERA"]
  ignore = [
    "D407", # Missing dashed underline after section
    "D203", # conflicts with D211
    "D212", # conflicts with D213
    "D413", # Missing blank line after last section

    # TODO: Remove these once we have docstrings
    "D100", # Missing docstring in public module
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in `__init__`
  ]

    [tool.ruff.lint.per-file-ignores]
    "**/tests/*" = ["D"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
empty_parameter_set_mark = "fail_at_collect"

[tool.importlinter]
root_package = "cloudai"

  [[tool.importlinter.contracts]]
  name = "_core does not depends on higher level layers"
  type = "layers"
  layers = [
    "installer : parser : report_generator : runner : schema : util : test_definitions : cli",
    "_core",
  ]
  containers = ["cloudai"]

  [[tool.importlinter.contracts]]
  name = "_core is not accessed directly"
  type = "forbidden"
  forbidden_modules = ["cloudai._core"]
  allow_indirect_imports = true # this is to allow "from cloudai import ..."
  source_modules = [
    "cloudai.installer",
    "cloudai.parser",
    "cloudai.report_generator",
    "cloudai.runner",
    "cloudai.schema",
    "cloudai.test_definitions",
    "cloudai.util",
    "cloudai.cli",
  ]

[tool.vulture]
ignore_names = ["mock_datetime_now"]
min_confidence = 100

[tool.coverage.report]
exclude_also = ["@abstractmethod"]
